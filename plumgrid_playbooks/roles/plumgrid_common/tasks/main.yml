---
#
# Copyright (c) 2016, PLUMgrid Inc, http://plumgrid.com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Removing pre-exiting sources.list
  file:
    path: "/etc/apt/sources.list.d/plumgrid.list"
    state: absent

- name: Add PLUMgrid and PLUMgrid-images repo
  apt_repository:
    repo: "{{ item }}"
    state: present
    filename: "plumgrid"
  with_items:
    - 'deb {{ plumgrid_repo }}/plumgrid plumgrid {{ plumgrid_component }}'
    - 'deb {{ plumgrid_repo }}/plumgrid-images plumgrid {{ plumgrid_component }}'

# Copy GPG-key file to target nodes
- name: Copy PLUMgrid GPG-key file
  template:
    src: "{{ gpg_keypath }}"
    dest: /tmp/GPG-KEY

# Create GPG-key
- name: Add PLUMgrid GPG-key
  apt_key:
    file: /tmp/GPG-KEY
    state: present

# Install docker on Edge
- name: Check if Docker is installed
  command: dpkg-query -l docker-engine
  register: docker_check
  ignore_errors: yes
  when: inventory_hostname in groups['edge_hosts']

- name: Install Docker
  shell: curl -sSL https://get.docker.com/ | sh
  when: inventory_hostname in groups['edge_hosts'] and docker_check.stderr.find('no packages found') != -1

- name: Check Docker Service
  command: /usr/bin/service docker status
  register: service_check
  until: service_check.stdout.find('start/running') != -1
  when: inventory_hostname in groups['edge_hosts']

- name: Install iovisor and plumgrid
  apt:
    name: "{{ item }}" 
    update_cache: yes
    state: latest
    force: yes
  with_items:
    - iovisor-dkms
    - "{{ pg_package_name }}"

- name: Setup PLUMgrid Conf
  template:
    src: "plumgrid.conf.j2"
    dest: "{{ plumgrid_data_dir }}/conf/pg/plumgrid.conf"

- name: Override Management interface for node
  replace:
    dest: "{{ plumgrid_data_dir }}/conf/pg/plumgrid.conf"
    replace: "mgmt_dev={{ mgmt_override[inventory_hostname] }}"
    regexp: "mgmt_dev={{ pg_management }}"
  when: mgmt_override is defined and inventory_hostname in mgmt_override


- name: Update PLUMgrid hostname and hosts file
  replace:
    dest: "{{ plumgrid_data_dir }}/conf/etc/{{ item }}"
    replace: "{{ inventory_hostname }}"
    regexp: "plumgrid"
  when: inventory_hostname not in groups['edge_hosts']
  with_items:
    - hostname
    - hosts

- name: Get LCM key if present
  set_fact:
    lcm_ssh_key: "{{ lookup('file', lvm_keypath_content) }}"
  when: lcm_enabled is defined and lcm_enabled == True

- name: Set the LCM SSH key in place
  lineinfile:
    dest: "{{ plumgrid_data_dir }}/root/.ssh/authorized_keys"
    line: "{{ lcm_ssh_key }}"
    create: yes
  when: lcm_enabled is defined and lcm_enabled == True and lcm_ssh_key != ""

- name: Removing network-manager
  apt:
    name: network-manager
    state: absent
    purge: yes
    force: yes

- name: Check if network-manager is still present
  shell: >
     dpkg -s network-manager | grep Status
  register: nm_check
  failed_when: nm_check.stderr.find('is not installed') == -1
  changed_when: false

- name: Drop OPSVM conf
  template:
    src: "00-pg.conf.j2"
    dest: "{{ plumgrid_data_dir }}/conf/etc/00-pg.conf"
  when: middleware_ip is defined
